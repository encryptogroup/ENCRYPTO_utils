if(NOT "${OpenSSL_LIBRARY_TYPE}" STREQUAL "STATIC" AND NOT "${OpenSSL_LIBRARY_TYPE}" STREQUAL "SHARED")
    set(OpenSSL_LIBRARY_TYPE "@OpenSSL_LIBRARY_TYPE@")
endif()
set(LIB_PREFIX "${CMAKE_${OpenSSL_LIBRARY_TYPE}_LIBRARY_PREFIX}")
set(LIB_SUFFIX "${CMAKE_${OpenSSL_LIBRARY_TYPE}_LIBRARY_SUFFIX}")

set(OpenSSL_INCLUDE_PATHS "@INSTALL_CONFIG_INCLUDE_PATHS@")
set(OpenSSL_LIB_PATHS "@INSTALL_CONFIG_LIB_PATHS@")

unset(OpenSSL_INCLUDE_DIR CACHE)
unset(OpenSSL_SSL_LIBRARY CACHE)
unset(OpenSSL_CRYPTO_LIBRARY CACHE)

find_path(OpenSSL_INCLUDE_DIR NAMES openssl/crypto.h openssl/ssl.h PATHS ${OpenSSL_INCLUDE_PATHS})
find_library(OpenSSL_SSL_LIBRARY NAMES ${LIB_PREFIX}ssl${LIB_SUFFIX} PATHS ${OpenSSL_LIB_PATHS})
find_library(OpenSSL_CRYPTO_LIBRARY NAMES ${LIB_PREFIX}crypto${LIB_SUFFIX} PATHS ${OpenSSL_LIB_PATHS})

if(EXISTS "${OpenSSL_INCLUDE_DIR}" AND EXISTS "${OpenSSL_SSL_LIBRARY}" AND EXISTS "${OpenSSL_CRYPTO_LIBRARY}")
    set(OpenSSL_FOUND TRUE)
else()
    set(OpenSSL_SSL_LIBRARY )
    set(OpenSSL_CRYPTO_LIBRARY )
    set(OpenSSL_FOUND FALSE)
endif()

set(OpenSSL_LIBRARIES ${OpenSSL_SSL_LIBRARY} ${OpenSSL_CRYPTO_LIBRARY})
if(OpenSSL_FOUND AND NOT TARGET OpenSSL::SSL)
    add_library(OpenSSL::SSL "${OpenSSL_LIBRARY_TYPE}" IMPORTED)
    set_target_properties(OpenSSL::SSL PROPERTIES
        IMPORTED_LOCATION "${OpenSSL_SSL_LIBRARY}"
        INTERFACE_INCLUDE_DIRECTORIES "${OpenSSL_INCLUDE_DIR}"
    )
    if("${OpenSSL_LIBRARY_TYPE}" STREQUAL "SHARED")
        set_target_properties(OpenSSL::SSL PROPERTIES VERSION "@OpenSSL_VERSION@")
    endif()
endif()
if(OpenSSL_FOUND AND NOT TARGET OpenSSL::Crypto)
    add_library(OpenSSL::Crypto "${OpenSSL_LIBRARY_TYPE}" IMPORTED)
    set_target_properties(OpenSSL::Crypto PROPERTIES
        IMPORTED_LOCATION "${OpenSSL_CRYPTO_LIBRARY}"
        INTERFACE_INCLUDE_DIRECTORIES "${OpenSSL_INCLUDE_DIR}"
    )
    if("${OpenSSL_LIBRARY_TYPE}" STREQUAL "SHARED")
        set_target_properties(OpenSSL::Crypto PROPERTIES VERSION "@OpenSSL_VERSION@")
    endif()
endif()
mark_as_advanced(
    OpenSSL_INCLUDE_DIR
    OpenSSL_LIBRARY
    OpenSSL_SSL_LIBRARY
    OpenSSL_CRYPTO_LIBRARY
)
